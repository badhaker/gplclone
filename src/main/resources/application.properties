server.port=9001
spring.jpa.database=default
server.servlet.context-path=/api

spring.jpa.database-platform=${DATABASE_DIALECT}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
 

spring.datasource.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?currentSchema="${DATABASE_SCHEMA}"
spring.jpa.properties.hibernate.default_schema="${DATABASE_SCHEMA}"
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.physical_naming_strategy=com.alchemy.configuration.CustomPhysicalNamingStrategy

spring.redis.connect-timeout=5000ms
spring.redis.lettuce.shutdown-timeout=500ms


#time zone
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
 

spring.main.allow-circular-references=true

#Jwt secrete key
jwt.secret=${JWT_SECRET_KEY}
 
# 
#if handler not found 
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=1KB
# Max file size.
spring.servlet.multipart.max-file-size=20MB
# Max Request Size
spring.servlet.multipart.max-request-size=50MB

## File Storage Properties
file.upload-dir=${user.dir}/private/files

spring.web.resources.static-locations[0]=file:src/main/resources/public/uploads/
spring.web.resources.static-locations[1]=classpath:/public/uploads/
spring.mvc.static-path-pattern = classpath:/public/uploads/

#Email integration
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.fromEmail=${SMTP_FROM_EMAIL}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
logging.level.tomcat=TRACE

spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.database=0	
spring.cache.type=redis

url=${ONBOARDING_URL}

sso.redirect.url=${SSO_REDIRECT_URL}
sso.tenant-id:${SSO_TENANT_ID}
sso.assertion-service-url:${SSO_ASSERTION_SERVICE_URL}
sso.issuer:${SSO_ISSUER}

saml.certificate:${SAML_CERTIFICATE}

